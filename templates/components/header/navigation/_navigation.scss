@use "assets/scss/config/breakpoints" as bp;
@use "assets/scss/config/spacings" as sp;
@use "assets/scss/config/sizes" as s;
@use "assets/scss/config/functions" as f;
@use "assets/scss/config/colors" as c;
@import "assets/scss/config/silent-classes";

.navigation {
  @extend %smooth-scroll;
  height: f.px-to-rem(s.$mobile-navigation-h);
  display: flex;
  flex-wrap: nowrap;
  overflow-x: scroll;
  overflow-y: hidden;

  @media screen and (min-width: bp.$phablet) and (max-width: bp.$desktop - 1) {
    max-width: bp.$phablet;
    margin: 0 auto;
  }

  @media screen and (min-width: bp.$desktop) {
    padding-right: sp.$gutter-desktop;
    height: auto;
    flex: 1 1 auto;
    justify-content: flex-end;
    overflow: visible;
  }

  &__item {
    @extend %text-colored-link;
    @extend %header-font;
    flex: 1 1 auto;
    display: flex;
    align-items: center;
    justify-content: center;
    padding: 0 10px;
    font-size: 1.4rem;

    @media screen and (min-width: bp.$desktop) {
      flex: 0 0 auto;
      padding: 0 (sp.$gutter-desktop * 2);
      font-size: 1.8rem;
    }

    > span {
      display: block;
      white-space: nowrap;
      overflow: hidden;
      text-overflow: ellipsis;
    }

    &:after {
      content: '';
      height: 3px;
      position: absolute;
      left: 50%;
      bottom: 0;
      transition: all .3s ease-in-out;
      opacity: 0;
      width: 0;
      transform: translate3d(-50%, 0, 0);

      @media screen and (min-width: bp.$desktop) {
        bottom: -2px;
        height: 4px;
      }

    }

    &:focus,
    &:hover {

      &:not(.active) {
        &:after {
          opacity: 1;
          width: 100%;
          background-color: c.$orange;
        }
      }
    }

    &.active {
      &:after {
        opacity: 1;
        width: 100%;
        background-color: c.$dark-green;
      }
    }

  }
}