@use "../../scss/config/colors" as c;
@use "../../scss/config/decorations" as d;
@use "../../scss/config/z-indexes" as z;
@use "../../scss/config/sizes" as s;
@use "../../scss/config/spacings" as sp;
@use "../../scss/config/breakpoints" as bp;

@use "navigation/navigation";
@use "logo/logo";
@use "language-link/language-link";

.header {
  background-color: c.$beige;
  box-shadow: 0 0 5px 0 rgba(0, 0, 0, .2);
  z-index: z.$z-top;
  position: relative; // 1)
  top: 0;
  left: 0;
  right: 0;

  @media screen and (min-height: bp.$smallest-height) { // 1)
    position: fixed;
  }

  &:after {
    content: '';
    position: absolute;
    top: s.$mobile-header-top-h;
    left: 0;
    right: 0;
    height: 1px;
    background: rgba(0, 0, 0, .1);
  }

  @media screen and (min-width: bp.$desktop) {
    display: flex;
  }

  &--pulled-up { // 2)
    transform: translate3d(0, -#{s.$mobile-header-top-h + s.$mobile-navigation-h + 2px}, 0);

    @media screen and (min-width: bp.$desktop) {
      transform: none;
    }
  }

  &__logo {
    height: s.$mobile-header-top-h;
    display: flex;
    align-items: center;
    padding-left: sp.$gutter;

    @media screen and (min-width: bp.$phablet) and (max-width: bp.$desktop - 1) {
      max-width: bp.$phablet;
      justify-content: center;
      margin: 0 auto;
    }

    @media screen and (min-width: bp.$desktop) {
      padding-left: sp.$gutter-desktop;
      max-width: none;
      margin: 0;
    }

  }

  a {

    &:hover,
    &:focus {
      text-decoration: none;
    }

  }

}

body.header-offset {
  @media screen and (min-height: bp.$smallest-height) { // 1)
    padding-top: #{s.$mobile-header-top-h + s.$mobile-navigation-h};
  }

  @media screen and (min-width: bp.$desktop) and (min-height: bp.$smallest-height) { // 1)
    padding-top: s.$desktop-header-h;
  }
}

// 1) In mobile devices when we focus into a form element and the virtual keyboard opens
// the fixed header will take up almost all of the screen, making it hard to fill in the form
// since there's no (easy) way to detect when the virtual keyboard is opened on a touch device
// we'll just disable fixed header on any viewport that's smaller then the minimum supported

// 2) Class for hiding the fix header when scrolling down, and then animating it in
// once the user starts scrolling back up. This behaviour is only expected in mobile
